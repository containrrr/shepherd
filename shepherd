#!/bin/ash
## shellcheck shell=dash
#services.lst contains one service name per line with at start b: if blacklisted
#and w: if whitelisted
#example:
#b:shepherd

#pipefail will prevent from providing the list of unmanaged services
#set -euo pipefail

update_services() {
  for service in $(IFS="\n" docker service ls --quiet); do
    local name image_with_digest image
    name="$(docker service inspect "$service" -f '{{.Spec.Name}}')"
    if [ -f "/tmp/${SERVICE_LIST}" ]; then
     status=$(cat "/tmp/${SERVICE_LIST}" | grep $name | cut -d':' -f1 )
     service_name=$(cat "/tmp/${SERVICE_LIST}" | grep $name | cut -d':' -f2 )
      if [ "$service_name" == "$name" ]; then
         case $status in
         b)
          echo "service ${name} is blacklisted .... skipping"
          ;;
         w)
          echo "service ${service_name} is whitelisted .... updating"
          image_with_digest="$(docker service inspect "$service" -f '{{.Spec.TaskTemplate.ContainerSpec.Image}}')"
          image=$(echo "$image_with_digest" | cut -d@ -f1)
          echo "Updating service $name with image $image"
          docker service update --detach="false" "$service" --image="$image" > /dev/null
          ;;
         '')
          echo "No management information for Service ${name} ..... skipping"
          ;;
         *)
          echo "No management information for ${name} ..... skipping"
         ;;
       esac
        else
         echo "No management information for ${name} ..... skipping"
      fi
      else
       echo "Missing services.lst file ........... exiting"
       exit 1
    fi
   done
}

main() {
 while true; do
  update_services
  echo "Sleeping ${SLEEP_TIME} before next update."
  sleep "${SLEEP_TIME}"
 done
}
